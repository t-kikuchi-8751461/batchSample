package com.example.demo.model.generator;

import java.time.LocalDateTime;

public class ExecutionHistory {
    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column execution_history.id
     *
     * @mbg.generated
     */
    private Long id;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column execution_history.successful_termination_executed_at
     *
     * @mbg.generated
     */
    private LocalDateTime successfulTerminationExecutedAt;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column execution_history.id
     *
     * @return the value of execution_history.id
     *
     * @mbg.generated
     */
    public Long getId() {
        return id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column execution_history.id
     *
     * @param id the value for execution_history.id
     *
     * @mbg.generated
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column execution_history.successful_termination_executed_at
     *
     * @return the value of execution_history.successful_termination_executed_at
     *
     * @mbg.generated
     */
    public LocalDateTime getSuccessfulTerminationExecutedAt() {
        return successfulTerminationExecutedAt;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column execution_history.successful_termination_executed_at
     *
     * @param successfulTerminationExecutedAt the value for execution_history.successful_termination_executed_at
     *
     * @mbg.generated
     */
    public void setSuccessfulTerminationExecutedAt(LocalDateTime successfulTerminationExecutedAt) {
        this.successfulTerminationExecutedAt = successfulTerminationExecutedAt;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table execution_history
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", successfulTerminationExecutedAt=").append(successfulTerminationExecutedAt);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table execution_history
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        ExecutionHistory other = (ExecutionHistory) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getSuccessfulTerminationExecutedAt() == null ? other.getSuccessfulTerminationExecutedAt() == null : this.getSuccessfulTerminationExecutedAt().equals(other.getSuccessfulTerminationExecutedAt()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table execution_history
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getSuccessfulTerminationExecutedAt() == null) ? 0 : getSuccessfulTerminationExecutedAt().hashCode());
        return result;
    }
}